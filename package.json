{
  "name": "slotwise",
  "version": "1.0.0",
  "description": "High-velocity scheduling platform for solopreneurs and small businesses",
  "private": true,
  "workspaces": [
    "frontend",
    "services/*",
    "shared/*"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:frontend && npm run install:services",
    "install:frontend": "cd frontend && npm install",
    "install:services": "cd services/auth-service && npm install && cd ../business-service && npm install && cd ../notification-service && npm install",
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:services\" \"npm run dev:nats\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:services": "concurrently \"npm run dev:auth\" \"npm run dev:business\" \"npm run dev:scheduling\" \"npm run dev:notification\"",
    "dev:auth": "cd services/auth-service && go run main.go",
    "dev:business": "cd services/business-service && npm run dev",
    "dev:scheduling": "cd services/scheduling-service && go run main.go",
    "dev:notification": "cd services/notification-service && npm run dev",
    "dev:nats": "nats-server --config infrastructure/nats/nats.conf",
    "build": "npx nx run-many -t build",
    "build:affected": "npx nx affected -t build",
    "build:frontend": "cd frontend && npm run build",
    "build:services": "npm run build:auth && npm run build:business && npm run build:scheduling && npm run build:notification",
    "build:auth": "cd services/auth-service && go build -o bin/auth-service main.go",
    "build:business": "cd services/business-service && npm run build",
    "build:scheduling": "cd services/scheduling-service && go build -o bin/scheduling-service main.go",
    "build:notification": "cd services/notification-service && npm run build",
    "test": "npx nx run-many -t test --passWithNoTests",
    "test:affected": "npx nx affected -t test --passWithNoTests",
    "test:all": "npm run test:frontend && npm run test:services",
    "test:frontend": "cd frontend && npm test",
    "test:services": "npm run test:auth && npm run test:business && npm run test:scheduling && npm run test:notification",
    "test:auth": "cd services/auth-service && go test ./...",
    "test:business": "cd services/business-service && npm test",
    "test:scheduling": "cd services/scheduling-service && go test ./...",
    "test:notification": "cd services/notification-service && npm test",
    "test:integration": "npx nx run-many -t test:integration --passWithNoTests",
    "test:e2e": "cd e2e && npm test",
    "infra:up": "docker-compose -f infrastructure/docker-compose.dev.yml up -d",
    "infra:down": "docker-compose -f infrastructure/docker-compose.dev.yml down",
    "infra:logs": "docker-compose -f infrastructure/docker-compose.dev.yml logs -f",
    "lint": "npx nx run-many -t lint",
    "lint:affected": "npx nx affected -t lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:services": "npm run lint:business && npm run lint:notification",
    "lint:business": "cd services/business-service && npm run lint",
    "lint:notification": "cd services/notification-service && npm run lint",
    "format": "npm run format:frontend && npm run format:services",
    "format:frontend": "cd frontend && npm run format",
    "format:services": "npm run format:business && npm run format:notification",
    "format:business": "cd services/business-service && npm run format",
    "format:notification": "cd services/notification-service && npm run format",
    "typecheck": "npx nx run-many -t typecheck",
    "typecheck:affected": "npx nx affected -t typecheck",
    "docker:build": "docker-compose -f infrastructure/docker-compose.yml build",
    "docker:up": "docker-compose -f infrastructure/docker-compose.yml up -d",
    "docker:down": "docker-compose -f infrastructure/docker-compose.yml down",
    "k8s:deploy": "kubectl apply -f infrastructure/k8s/",
    "k8s:delete": "kubectl delete -f infrastructure/k8s/",
    "setup": "./scripts/setup-dev.sh",
    "clean": "npm run clean:services && npm run clean:frontend",
    "clean:services": "cd services/business-service && npm run clean && cd ../notification-service && npm run clean",
    "clean:frontend": "cd frontend && rm -rf .next",
    "db:migrate": "npm run db:migrate:business && npm run db:migrate:notification",
    "db:migrate:business": "cd services/business-service && npx prisma migrate dev",
    "db:migrate:notification": "cd services/notification-service && npx prisma migrate dev",
    "deps:update": "npm run deps:update:go && npm run deps:update:node",
    "deps:update:go": "npm run deps:update:auth && npm run deps:update:scheduling",
    "deps:update:auth": "cd services/auth-service && go get -u && go mod tidy",
    "deps:update:scheduling": "cd services/scheduling-service && go get -u && go mod tidy",
    "deps:update:node": "npm run deps:update:business && npm run deps:update:notification && npm run deps:update:frontend",
    "deps:update:business": "cd services/business-service && npm update",
    "deps:update:notification": "cd services/notification-service && npm update",
    "deps:update:frontend": "cd frontend && npm update",
    "deps:audit": "npm run deps:audit:node && npm run deps:audit:go",
    "deps:audit:node": "npm run deps:audit:business && npm run deps:audit:notification && npm run deps:audit:frontend",
    "deps:audit:business": "cd services/business-service && npm audit",
    "deps:audit:notification": "cd services/notification-service && npm audit",
    "deps:audit:frontend": "cd frontend && npm audit",
    "deps:audit:go": "npm run deps:audit:auth && npm run deps:audit:scheduling",
    "deps:audit:auth": "cd services/auth-service && go list -json -deps ./... | nancy sleuth",
    "deps:audit:scheduling": "cd services/scheduling-service && go list -json -deps ./... | nancy sleuth"
  },
  "devDependencies": {
    "@nx/eslint": "21.1.2",
    "@nx/jest": "21.1.2",
    "@nx/next": "^21.1.2",
    "@swc-node/register": "^1.10.10",
    "@swc/core": "^1.11.29",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "concurrently": "^8.2.2",
    "eslint": "~8.57.0",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.10",
    "nx": "21.1.2",
    "prettier": "^3.4.2",
    "ts-jest": "^29.2.5",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "overrides": {
    "esbuild": "^0.25.0",
    "koa": "^2.16.1",
    "mjml": {
      "html-minifier": "^4.0.0"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/michaelfperla/slotwise.git"
  },
  "keywords": [
    "scheduling",
    "booking",
    "microservices",
    "event-driven",
    "typescript",
    "go",
    "react",
    "nextjs"
  ],
  "author": "SlotWise Team",
  "license": "MIT",
  "dependencies": {
    "next": "~15.2.4",
    "react": "19.0.0",
    "react-dom": "19.0.0"
  }
}

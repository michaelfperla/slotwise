// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id          String   @id @default(cuid())
  name        String
  description String?
  subdomain   String   @unique
  logo        String?
  website     String?
  phone       String?
  email       String
  timezone    String
  currency    String   @default("USD")
  ownerId     String
  status      BusinessStatus @default(PENDING_SETUP)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Address
  street     String
  city       String
  state      String
  postalCode String
  country    String

  // Settings (JSON fields)
  bookingSettings     Json @default("{}")
  paymentSettings     Json @default("{}")
  notificationSettings Json @default("{}")
  availabilitySettings Json @default("{}")

  // Subscription
  subscriptionPlan   SubscriptionPlan   @default(FREE)
  subscriptionStatus SubscriptionStatus @default(ACTIVE)
  currentPeriodStart DateTime           @default(now())
  currentPeriodEnd   DateTime           @default(now())
  cancelAtPeriodEnd  Boolean            @default(false)

  // Relations
  services      Service[]
  availabilities Availability[] // Added relation to Availability

  @@map("businesses")
}

model Service {
  id                    String  @id @default(cuid())
  businessId            String
  name                  String
  description           String?
  duration              Int     // minutes
  price                 Decimal @db.Decimal(10, 2)
  currency              String  @default("USD")
  category              String?
  isActive              Boolean @default(true)
  maxAdvanceBookingDays Int     @default(30)
  minAdvanceBookingHours Int    @default(1)
  allowOnlinePayment    Boolean @default(true)
  requiresApproval      Boolean @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relations
  business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@map("services")
}

model Availability {
  id          String   @id @default(cuid())
  businessId  String
  dayOfWeek   DayOfWeek // Enum for days
  startTime   String   // Store as HH:MM string in 24-hour format e.g., "09:00"
  endTime     String   // Store as HH:MM string e.g., "17:00"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@unique([businessId, dayOfWeek, startTime, endTime], name: "business_day_time_unique") // Prevent duplicate entries
  @@map("availabilities")
}

enum BusinessStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_SETUP
}

enum SubscriptionPlan {
  FREE
  STARTER
  PROFESSIONAL
  ENTERPRISE
}

enum SubscriptionStatus {
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
}

enum DayOfWeek {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

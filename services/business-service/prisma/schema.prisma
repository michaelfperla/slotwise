// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id          String   @id @default(cuid())
  name        String
  description String?
  subdomain   String   @unique
  logo        String?
  website     String?
  phone       String?
  email       String
  timezone    String
  currency    String   @default("USD")
  ownerId     String
  status      String @default("PENDING_SETUP")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Address
  street     String
  city       String
  state      String
  postalCode String
  country    String

  // Settings (JSON fields stored as String for SQLite compatibility)
  bookingSettings     String @default("{}")
  paymentSettings     String @default("{}")
  notificationSettings String @default("{}")
  availabilitySettings String @default("{}")

  // Subscription
  subscriptionPlan   String @default("FREE")
  subscriptionStatus String @default("ACTIVE")
  currentPeriodStart DateTime           @default(now())
  currentPeriodEnd   DateTime           @default(now())
  cancelAtPeriodEnd  Boolean            @default(false)

  // Relations
  services      Service[]
  availabilities Availability[] // Added relation to Availability

  @@map("businesses")
}

model Service {
  id                    String  @id @default(cuid())
  businessId            String
  name                  String
  description           String?
  duration              Int     // minutes
  price                 Float
  currency              String  @default("USD")
  category              String?
  isActive              Boolean @default(true)
  maxAdvanceBookingDays Int     @default(30)
  minAdvanceBookingHours Int    @default(1)
  allowOnlinePayment    Boolean @default(true)
  requiresApproval      Boolean @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relations
  business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@map("services")
}

model Availability {
  id          String    @id @default(cuid())
  businessId  String
  dayOfWeek   DayOfWeek // Use enum for days
  startTime   String    // Store as HH:MM string in 24-hour format e.g., "09:00"
  endTime     String    // Store as HH:MM string e.g., "17:00"
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@unique([businessId, dayOfWeek, startTime, endTime], name: "business_day_time_unique") // Prevent duplicate entries
  @@map("availabilities")
}

// Enums
enum DayOfWeek {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

// String constants for other enums (keeping for compatibility)
// BusinessStatus: "ACTIVE", "INACTIVE", "SUSPENDED", "PENDING_SETUP"
// SubscriptionPlan: "FREE", "STARTER", "PROFESSIONAL", "ENTERPRISE"
// SubscriptionStatus: "ACTIVE", "PAST_DUE", "CANCELED", "UNPAID"

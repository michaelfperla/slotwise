{
  "name": "@slotwise/business-service",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "services/business-service/src",
  "projectType": "application",
  "tags": ["scope:backend", "type:service", "platform:node"],
  "targets": {
    "build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc",
        "cwd": "services/business-service"
      },
      "outputs": ["{projectRoot}/dist"],
      "dependsOn": ["^build"]
    },
    "serve": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsx watch src/index.ts",
        "cwd": "services/business-service"
      },
      "dependsOn": ["build"]
    },
    "test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "jest",
        "cwd": "services/business-service"
      },
      "outputs": ["{projectRoot}/coverage"]
    },
    "test:watch": {
      "executor": "nx:run-commands",
      "options": {
        "command": "jest --watch",
        "cwd": "services/business-service"
      }
    },
    "test:integration": {
      "executor": "nx:run-commands",
      "options": {
        "command": "jest --config jest.integration.config.js",
        "cwd": "services/business-service"
      },
      "dependsOn": ["build"]
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "command": "eslint src --ext .ts",
        "cwd": "services/business-service"
      }
    },
    "lint:fix": {
      "executor": "nx:run-commands",
      "options": {
        "command": "eslint src --ext .ts --fix",
        "cwd": "services/business-service"
      }
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc --noEmit",
        "cwd": "services/business-service"
      }
    },
    "docker:build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker build -t slotwise-business-service .",
        "cwd": "services/business-service"
      },
      "dependsOn": ["build"]
    }
  }
}
